# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0


receivers:
  otlp:
    protocols:
      grpc:
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

exporters:
  otlp:
    endpoint: "http://otel-collector:4317"
    tls:
      insecure: true
  logging:
  prometheus:
    endpoint: "otelcol:9464"
    resource_to_telemetry_conversion:
      enabled: true
    enable_open_metrics: true
  clickhouse:
    endpoint: tcp://clickhouse:9000?dial_timeout=10s&compress=lz4
    database: otel
    ttl_days: 3
    logs_table_name: otel_logs
    traces_table_name: otel_traces
    metrics_table_name: otel_metrics
    timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

processors:
  batch:
  spanmetrics:
    metrics_exporter: clickhouse
  filter:
    metrics:
      exclude:
        match_type: strict
        metric_names:
          - queueSize
  servicegraph:
    metrics_exporter: clickhouse # Exporter to send metrics to
    latency_histogram_buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms] # Buckets for latency histogram
    dimensions: [cluster, namespace, operation,service_name] # Additional dimensions (labels) to be added to the metrics extracted from the resource and span attributes
    store: # Configuration for the in-memory store
      ttl: 2s # Value to wait for an edge to be completed
      max_items: 200 # Amount of edges that will be stored in the storeMap

connectors:
  spanmetrics:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp, logging, spanmetrics, clickhouse]
    metrics:
      receivers: [otlp, spanmetrics]
      processors: [filter, batch]
      exporters: [prometheus, logging, clickhouse]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, clickhouse]